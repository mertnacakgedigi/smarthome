{"version":3,"sources":["hooks/Lights/Light.js","hooks/Thermostat/Thermostat.js","hooks/Command/SpeechRecognition.js","hooks/Command/CommandList.js","hooks/Logs/Logs.js","api/index.js","util/Input.js","hooks/Logs/LastLog.js","hooks/Lights/LightHeader.js","hooks/MyHome.js","serviceWorker.js","index.js","style/images/loop.gif","style/images/canoodark.jpg","style/images/canoo.png"],"names":["Memoized","React","memo","toggleLight","deleteLight","id","checkOn","className","src","loop","alt","dark","onClick","Switch","checked","onChange","color","useStyles","makeStyles","root","disabled","Thermostat","props","updateThermostatColor","rgb","value","style","backgroundColor","Slider","orientation","min","step","max","onChangeCommitted","handleSubmit","getAriaValueText","marks","label","handleChange","valueLabelDisplay","aria-labelledby","height","defaultValue","Speech","SpeechRecognition","browserSupportsSpeechRecognition","IconButton","startListening","stopListening","transcript","theme","position","dropdown","top","right","left","zIndex","border","padding","spacing","CommandList","classes","useState","open","setOpen","ClickAwayListener","onClickAway","type","prev","Logs","logList","setState","toggleDrawer","event","key","logsAll","map","text","idx","ListItem","button","ListItemText","primary","Badge","badgeContent","length","canoo","Drawer","anchor","onClose","role","onKeyDown","HomeModel","axios","get","request","console","log","post","delete","data","put","Input","i","j","split_value","toLowerCase","split","first","second","third","fourth","special","indexOf","LastLog","useEffect","logs","Snackbar","anchorOrigin","vertical","horizontal","message","autoHideDuration","reason","LightHeader","addLight","removeLastLight","MyHome","lightList","lights","setLights","setTempature","setLogs","useSpeechRecognition","input","setInput","a","fetchHome","res","then","isOn","catch","err","deleteLastLigth","temp","pop","removeLight","splice","suffix","ordinal_suffix_of","transcriptCheck","undefined","split_of","fifth","twowords","threewords","fourwords","index","indexForDelete","sendTempatureToServer","handleChangeforTempature","newValue","getMyHome","element","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.ee46ec63.chunk.js","sourcesContent":["import React from 'react'\nimport Switch from '@material-ui/core/Switch';\nimport loop from '../../style/images/loop.gif'\nimport dark from '../../style/images/canoodark.jpg'\n\n\n\n\nfunction Light({toggleLight, deleteLight , id , checkOn}) {\n    return (\n        <div className=\"box\">     \n            { checkOn ?\n                 <img className=\"canoo\"  src={loop} alt=\"loop\"/> \n                 :\n                 <img className=\"canoo\" src={dark} alt=\"loop\"/>\n            }\n            <span className=\"delete\" onClick = {()=> deleteLight(id)}>&#10006;</span>\n            <Switch \n            checked={checkOn} \n            onChange ={() => toggleLight(id)}\n            color=\"primary\"\n            />   \n        </div>\n    )\n}\n\n\nexport const Memoized = React.memo(Light)","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n      color : 'white',\n    },\n    disabled : {\n      color : 'purple'\n    }\n});\n    \n\nexport default function Thermostat(props) {\n\n  const {root,disabled} = useStyles();\n\n  function updateThermostatColor () {\n    let stack = 50    \n    let rgb = (props.value - stack)*5\n    let currentColor = `rgb(${rgb},0,${250-rgb})`\n    return currentColor\n}\n\n  const marks = [\n    {\n      value: 60,\n      label: '60°F',\n    },\n    {\n        value: 50,\n        label: '50°F',\n      },\n      {\n        value: 70,\n        label: '70°F',\n      },\n    {\n      value: 80,\n      label: '80°F',\n    },\n    {\n      value: 90,\n      label: '90°F',\n    },\n    {\n      value: 100,\n      label: '100°F',\n    },\n  ];\n  const defaultMark = [{value: 77,label: '77°F',}]\n\n\n  function valuetext(value) {\n \n    return `${value}`;\n  }\n\n\nreturn (\n  <div>\n      <h1>Temperature</h1>\n\n      <div  className=\"thermostat\" style={{backgroundColor: `${updateThermostatColor()}` }}> \n          <Slider\n          className={root}\n          orientation=\"vertical\"\n          value={props.value}\n          min={50}\n          step={1}\n          max={100}\n          onChangeCommitted= {props.handleSubmit}\n          getAriaValueText={valuetext}\n          marks = {marks}\n          onChange={props.handleChange}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"vertical-slider\"\n          style = {{height: 270}}\n          />\n          <Slider\n          className={disabled}\n          disabled\n          orientation=\"vertical\"\n          max={100}\n          marks ={defaultMark}\n          step={1}\n          min={50}\n          defaultValue={77}\n          aria-labelledby=\"vertical-slider\"\n          style = {{height: 270}}\n          />\n      </div>\n      <p className=\"tempature\" >\n        Thermostat:\n        <span style={{color: `${updateThermostatColor()} ` }}>{props.value}°F </span> \n         Current Value:77°F\n      </p>    \n  </div>\n  );\n}\n","import React from 'react'\nimport SpeechRecognition from 'react-speech-recognition'\nimport StopIcon from '@material-ui/icons/Stop';\nimport MicIcon from '@material-ui/icons/Mic';\nimport IconButton from '@material-ui/core/IconButton'\n\nexport default function Speech(props) {\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n        return null\n    };\n    \n    return (\n        <div className=\"speech\">\n            <IconButton><MicIcon className=\"icon\" onClick={SpeechRecognition.startListening}/></IconButton> \n            <IconButton><StopIcon className=\"icon\" onClick={SpeechRecognition.stopListening}/></IconButton> \n            <p>Your Voice Command : {props.transcript ?  props.transcript : `Waiting for recording`}</p>  \n        </div>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n  dropdown: {\n    position: 'absolute',\n    top: 28,\n    right: 0,\n    left: 0,\n    zIndex: 1,\n    border: '1px solid',\n    padding: theme.spacing(1),\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function CommandList() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div className={classes.root}>\n        <button type=\"button\" onClick={handleClick}>\n          Valid Command List\n        </button>\n        {open ? (\n          <div className={classes.dropdown}>\n            <p>Turn on/off the nth light</p>\n            <p> Set the temperature to N</p>\n            <p>Add a new light</p>\n            <p>Remove the nth/Last Light</p>\n            <p>Increase/decrease the temperature</p>\n          </div>\n        ) : null}\n      </div>\n    </ClickAwayListener>\n  );\n}\n","import React, {useState} from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Badge from '@material-ui/core/Badge';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport canoo from \"../../style/images/canoo.png\"\n\nexport default function Logs(props) {\n  const [open, setState] = useState(false);\n\n  const toggleDrawer = (open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n  setState(open);\n  };\n\n  let logList;\n\n  if(props.logsAll) {\n    logList = props.logsAll.map((text,idx)=>{\n        return<ListItem  button key={idx}>\n               <ListItemText primary={`${idx+1}. ${text}`} /> \n              </ListItem> \n    })\n  }\n  return (\n    <div>\n          <div className=\"notification\"><Badge onClick={toggleDrawer(true)} badgeContent={logList ?  logList.length : 0 } color=\"primary\"><img onClick={toggleDrawer(true)} className=\"canoo icon\" src={canoo} alt=\"canoo\" /></Badge></div>\n          <Drawer\n            anchor={'bottom'}\n            open={open}\n            onClose={toggleDrawer( false)}\n            style = {{height : \"200px\"}}>\n            <div\n              className=\"log-list\"\n              role=\"presentation\"\n              onClick={toggleDrawer( false)}\n              onKeyDown={toggleDrawer(false)}>\n              {logList}\n            </div>\n          </Drawer>\n    </div>\n  );\n}\n","import axios from 'axios'\n\nexport default class HomeModel {\n    static async fetchHome() {\n        try {\n            let request = await axios.get(`api/home`)\n            return request\n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n    static addLight(){\n        let request = axios.post(`api/home`)\n        return request\n    }\n\n    static deleteLastLigth() {\n        let request = axios.delete(`api/home/lights`)\n        return request\n    }\n\n    static removeLight(data) {\n        let request = axios.delete(`api/home/lights/${data}`)\n        return request\n    }\n\n    static toggleLight(data) {\n        let request = axios.put(`api/home/lights/toggle/${data}`)\n        return request\n    }\n    static  setTempature(data) {\n            let request = axios.put(`api/home/tempature`,data)\n            return request\n    }\n}\n","export default class Input {\n\n    static ordinal_suffix_of(i) {\n        let j = i % 10\n        if (j===1) return `${i}st`\n                \n        if(j===2)  return `${i}nd`\n            \n        if(j===3) return `${i}rd`\n            \n        return `${i}th`\n    }\n\n    static split_of(value) {\n        // split the input and get checked words\n        let split_value = value.toLowerCase().split(\" \")\n        let [first,second,third,fourth,fifth] = split_value\n        let twowords = `${first} ${second}`\n        let threewords = `${first} ${second} ${third}`\n        let fourwords = `${first} ${second} ${third} ${fourth}`\n      \n        const special = ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth', 'ninth', 'tenth', 'eleventh', 'twelfth', 'thirteenth', 'fourteenth', 'fifteenth', 'sixteenth', 'seventeenth', 'eighteenth', 'nineteenth'];\n        let index = special.indexOf(split_value[3])\n        let indexForDelete = special.indexOf(split_value[2])\n        return [first,fifth,twowords,threewords,fourwords,index,indexForDelete]\n\n    }\n}","import React, {useEffect, useState} from 'react'\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nexport default function LastLog(props) {\n    const [open, setOpen] = React.useState(false);\n\n    useEffect(()=>{\n        setOpen(true);\n    },[props.logs])\n\n   const handleClick = () => {\n    setOpen(false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      \n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        message={props.logs ? props.logs[props.logs.length-1] : \"\" }\n        open={open}\n        autoHideDuration={2000}\n        onClose={handleClose}\n\n    \n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport { AddCircleOutlineTwoTone as Add , RemoveCircleOutlineTwoTone as Remove } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default function LightHeader(props) {\n    return (\n        <div>\n            <h1>Lights</h1>\n            <IconButton><Add onClick={props.addLight}/></IconButton>\n            <IconButton><Remove onClick={props.removeLastLight}/></IconButton>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport {Memoized as Light} from './Lights/Light'\nimport Thermostat from './Thermostat/Thermostat'\nimport Speech from './Command/SpeechRecognition'\nimport CommandList from './Command/CommandList'\nimport Logs from './Logs/Logs'\nimport HomeModel from '../api/index'\nimport Input from '../util/Input'\nimport LastLog from './Logs/LastLog'\nimport LightHeader from './Lights/LightHeader'\nimport { useSpeechRecognition } from 'react-speech-recognition'\n\n\n\nexport default function MyHome () {\n    const [lights, setLights] = useState();\n    const [value, setTempature] = useState(82)\n    const [logs,setLogs] =useState()\n    const {transcript } = useSpeechRecognition(\"\")\n    const [input,setInput]=useState(\"\")\n    const [lastLog,setLastLog] =useState(false)\n \n    //Fetch Home\n    useEffect(() => {   \n        getMyHome()\n    },[])\n\n    async function getMyHome () {\n        try {                  \n            const res = await HomeModel.fetchHome(); \n            const {lights , value, logs} = res.data; \n            setLights(lights);\n            setTempature(value);\n            setLogs(logs)\n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n\n    //Ligth functions\n    function addLight ()  { \n        HomeModel.addLight()\n            .then(res => { \n                setLogs([...logs,\"A new light added\"])\n                setLights([...lights,{isOn:false}])\n            })\n            .catch(err => console.log(err))\n    }\n\n    function removeLastLight () {\n        HomeModel.deleteLastLigth()\n            .then(res =>  {\n                const temp = [...lights]\n                temp.pop()\n                setLights(temp)     \n                setLogs([...logs,\"Last light deleted\"])\n            })\n            .catch(err => console.log(err))\n    }\n\n    function deleteLight (id) {   \n        HomeModel.removeLight(id)\n            .then(res => {\n                const temp = [...lights];\n                temp.splice(id,1);\n                setLights(temp);\n                let suffix = Input.ordinal_suffix_of(id+1)\n                setLogs([...logs,`The ${suffix} light deleted`])\n            })\n            .catch(err => console.log(err))\n    }\n\n    function toggleLight (id) {\n        HomeModel.toggleLight(id)\n            .then(res => {\n                const temp = [...lights]\n                temp[id].isOn = !temp[id].isOn\n                setLights(temp)\n                let suffix = Input.ordinal_suffix_of(id+1)\n                if (!temp[id].isOn) return setLogs([...logs,`The ${suffix} light turned off`])\n                setLogs([...logs,`The ${suffix} light turned on`])\n            })\n            .catch(err => console.log(err) )\n    }\n\n\n    // Transcript\n    useEffect(()=>{\n        transcriptCheck(transcript)\n        // eslint-disable-next-line\n    },[transcript])\n\n    function transcriptCheck(value)  {\n        // If text command or voice command empty return\n        if(value === \"\" || value ===undefined) return\n        // Get words of commands and make digits for string values\n        let [first,fifth,twowords,threewords,fourwords,index,indexForDelete] = Input.split_of(value)\n\n        if(fourwords ===\"add a new light\" || threewords === \"add a light\" ) addLight()\n        if(fourwords ===\"delete the last light\" || fourwords === \"remove the last light\") removeLastLight()\n        if(threewords ===\"set the temperature\" && fifth >= 50 && fifth <= 100 )  {sendTempatureToServer(\"\",fifth); handleChangeforTempature(\"\",fifth)}\n\n        // If there is no digit from the input return\n        if (index === -1 && indexForDelete === -1) return \n        if(first ===\"delete\" || first === \"remove\" ) deleteLight(indexForDelete)\n        if(twowords ===\"turn on\" && lights[index].isOn === false ) toggleLight(index)\n        if(twowords ===\"turn off\" && lights[index].isOn === true ) toggleLight(index)\n    }\n\n    //  Text Command\n    useEffect(()=>{\n        transcriptCheck(input)\n        // eslint-disable-next-line\n    },[input])\n\n    function onChange(event) {\n        setInput(event.target.value)\n    }\n\n    // Thermostat\n    function handleChangeforTempature (event, newValue)  {\n        setTempature(newValue)\n    };\n\n\n    function sendTempatureToServer (event, value) { \n        HomeModel.setTempature({value})\n            .then (res => {\n                setLogs([...logs,`Set the thermostat to ${value}°F`])\n            })\n            .catch(err => console.log(err))\n    };\n\n    // display the last log\n    // function showLastLog() {\n    //     setLastLog(true)\n    //     setInterval(() => {setLastLog(false)}, 4000);   \n    // }\n\n    let lightList;\n\n    if (lights) {\n        lightList = lights.map((element,idx) => {\n            return <div key={idx} className=\"light\"><Light toggleLight = {toggleLight} deleteLight ={deleteLight} id={idx}  checkOn={lights[idx] ? lights[idx].isOn : true} /></div>\n        })\n    }; \n        return (\n            <div> \n                <div className = \"row\">\n                     <div className=\"left\">           \n                        <LightHeader addLight={addLight} removeLastLight={removeLastLight}/>\n                        <div className=\"light-container\">\n                            {lightList}\n                        </div>\n                    </div>      \n                    <div className=\"right\">           \n                        <Thermostat key =\"thermo\"\n                            handleSubmit = {sendTempatureToServer} \n                            handleChange = {handleChangeforTempature} \n                            value = {value}\n                        /> \n                        <Speech \n                            transcript ={transcript} \n                            transcriptCheck = {transcriptCheck}\n                            key =\"speech\" \n                            toggleLight = {toggleLight}\n                        />\n                        <p> Your Text Command : <input value={input} onChange={onChange}></input></p>\n                        <CommandList/>\n                        <Logs  logsAll ={logs} />  \n                    </div>\n                </div>\n                <LastLog   logs= {logs} />  \n            </div>                   \n        )   \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style/main.css'\nimport MyHome from './hooks/MyHome'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <MyHome /> ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loop.6f5879ce.gif\";","module.exports = __webpack_public_path__ + \"static/media/canoodark.15a18071.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canoo.541da1bb.png\";"],"sourceRoot":""}