{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.commandToRegExp = exports.concatTranscripts = exports.debounce = void 0;\n\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexports.debounce = debounce;\n\nvar concatTranscripts = function concatTranscripts() {\n  for (var _len = arguments.length, transcriptParts = new Array(_len), _key = 0; _key < _len; _key++) {\n    transcriptParts[_key] = arguments[_key];\n  }\n\n  return transcriptParts.map(function (t) {\n    return t.trim();\n  }).join(' ').trim();\n}; // The command matching code is a modified version of Backbone.Router by Jeremy Ashkenas, under the MIT license.\n\n\nexports.concatTranscripts = concatTranscripts;\nvar optionalParam = /\\s*\\((.*?)\\)\\s*/g;\nvar optionalRegex = /(\\(\\?:[^)]+\\))\\?/g;\nvar namedParam = /(\\(\\?)?:\\w+/g;\nvar splatParam = /\\*/g;\nvar escapeRegExp = /[-{}[\\]+?.,\\\\^$|#]/g;\n\nvar commandToRegExp = function commandToRegExp(command) {\n  if (command instanceof RegExp) {\n    return new RegExp(command.source, 'i');\n  }\n\n  command = command.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n    return optional ? match : '([^\\\\s]+)';\n  }).replace(splatParam, '(.*?)').replace(optionalRegex, '\\\\s*$1?\\\\s*');\n  return new RegExp('^' + command + '$', 'i');\n};\n\nexports.commandToRegExp = commandToRegExp;","map":{"version":3,"sources":["/Users/mertnacakgedigi/Desktop/smarthome/node_modules/react-speech-recognition/lib/utils.js"],"names":["Object","defineProperty","exports","value","commandToRegExp","concatTranscripts","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","_len","length","transcriptParts","Array","_key","map","t","trim","join","optionalParam","optionalRegex","namedParam","splatParam","escapeRegExp","command","RegExp","source","replace","match","optional"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,iBAAR,GAA4BH,OAAO,CAACI,QAAR,GAAmB,KAAK,CAA9E;;AAEA,IAAIA,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyC;AACtD,MAAIC,OAAJ;AACA,SAAO,YAAY;AACjB,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIC,IAAI,GAAGC,SAAX;;AAEA,QAAIC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3BJ,MAAAA,OAAO,GAAG,IAAV;AACA,UAAI,CAACD,SAAL,EAAgBF,IAAI,CAACQ,KAAL,CAAWJ,OAAX,EAAoBC,IAApB;AACjB,KAHD;;AAKA,QAAII,OAAO,GAAGP,SAAS,IAAI,CAACC,OAA5B;AACAO,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGQ,UAAU,CAACJ,KAAD,EAAQN,IAAR,CAApB;AACA,QAAIQ,OAAJ,EAAaT,IAAI,CAACQ,KAAL,CAAWJ,OAAX,EAAoBC,IAApB;AACd,GAbD;AAcD,CAhBD;;AAkBAV,OAAO,CAACI,QAAR,GAAmBA,QAAnB;;AAEA,IAAID,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AACnD,OAAK,IAAIc,IAAI,GAAGN,SAAS,CAACO,MAArB,EAA6BC,eAAe,GAAG,IAAIC,KAAJ,CAAUH,IAAV,CAA/C,EAAgEI,IAAI,GAAG,CAA5E,EAA+EA,IAAI,GAAGJ,IAAtF,EAA4FI,IAAI,EAAhG,EAAoG;AAClGF,IAAAA,eAAe,CAACE,IAAD,CAAf,GAAwBV,SAAS,CAACU,IAAD,CAAjC;AACD;;AAED,SAAOF,eAAe,CAACG,GAAhB,CAAoB,UAAUC,CAAV,EAAa;AACtC,WAAOA,CAAC,CAACC,IAAF,EAAP;AACD,GAFM,EAEJC,IAFI,CAEC,GAFD,EAEMD,IAFN,EAAP;AAGD,CARD,C,CAQG;;;AAGHxB,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;AACA,IAAIuB,aAAa,GAAG,kBAApB;AACA,IAAIC,aAAa,GAAG,mBAApB;AACA,IAAIC,UAAU,GAAG,cAAjB;AACA,IAAIC,UAAU,GAAG,KAAjB;AACA,IAAIC,YAAY,GAAG,qBAAnB;;AAEA,IAAI5B,eAAe,GAAG,SAASA,eAAT,CAAyB6B,OAAzB,EAAkC;AACtD,MAAIA,OAAO,YAAYC,MAAvB,EAA+B;AAC7B,WAAO,IAAIA,MAAJ,CAAWD,OAAO,CAACE,MAAnB,EAA2B,GAA3B,CAAP;AACD;;AAEDF,EAAAA,OAAO,GAAGA,OAAO,CAACG,OAAR,CAAgBJ,YAAhB,EAA8B,MAA9B,EAAsCI,OAAtC,CAA8CR,aAA9C,EAA6D,SAA7D,EAAwEQ,OAAxE,CAAgFN,UAAhF,EAA4F,UAAUO,KAAV,EAAiBC,QAAjB,EAA2B;AAC/H,WAAOA,QAAQ,GAAGD,KAAH,GAAW,WAA1B;AACD,GAFS,EAEPD,OAFO,CAECL,UAFD,EAEa,OAFb,EAEsBK,OAFtB,CAE8BP,aAF9B,EAE6C,aAF7C,CAAV;AAGA,SAAO,IAAIK,MAAJ,CAAW,MAAMD,OAAN,GAAgB,GAA3B,EAAgC,GAAhC,CAAP;AACD,CATD;;AAWA/B,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.commandToRegExp = exports.concatTranscripts = exports.debounce = void 0;\n\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexports.debounce = debounce;\n\nvar concatTranscripts = function concatTranscripts() {\n  for (var _len = arguments.length, transcriptParts = new Array(_len), _key = 0; _key < _len; _key++) {\n    transcriptParts[_key] = arguments[_key];\n  }\n\n  return transcriptParts.map(function (t) {\n    return t.trim();\n  }).join(' ').trim();\n}; // The command matching code is a modified version of Backbone.Router by Jeremy Ashkenas, under the MIT license.\n\n\nexports.concatTranscripts = concatTranscripts;\nvar optionalParam = /\\s*\\((.*?)\\)\\s*/g;\nvar optionalRegex = /(\\(\\?:[^)]+\\))\\?/g;\nvar namedParam = /(\\(\\?)?:\\w+/g;\nvar splatParam = /\\*/g;\nvar escapeRegExp = /[-{}[\\]+?.,\\\\^$|#]/g;\n\nvar commandToRegExp = function commandToRegExp(command) {\n  if (command instanceof RegExp) {\n    return new RegExp(command.source, 'i');\n  }\n\n  command = command.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n    return optional ? match : '([^\\\\s]+)';\n  }).replace(splatParam, '(.*?)').replace(optionalRegex, '\\\\s*$1?\\\\s*');\n  return new RegExp('^' + command + '$', 'i');\n};\n\nexports.commandToRegExp = commandToRegExp;"]},"metadata":{},"sourceType":"script"}